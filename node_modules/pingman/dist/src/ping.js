"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const child_process_1 = require("child_process");
const errors_1 = require("./errors");
const messages_1 = require("./messages");
const execute = async (builtCommand) => {
    let ping;
    let output = [];
    return new Promise((resolve, reject) => {
        var _a;
        try {
            ping = child_process_1.spawn(builtCommand.command, builtCommand.arguments);
        }
        catch (error) {
            reject(new errors_1.spawnError(messages_1.ERROR_MESSAGES.SPAWN_ERROR.replace('args', builtCommand.arguments.toString())));
            return;
        }
        ping.once("error", () => {
            reject(new errors_1.pingError(messages_1.ERROR_MESSAGES.GENERAL_PING_ERROR));
            return;
        });
        (_a = ping.stdout) === null || _a === void 0 ? void 0 : _a.on('data', (data) => {
            output.push(String(data));
        });
        ping.on("close", () => {
            resolve(output);
            return;
        });
    });
};
exports.default = execute;
