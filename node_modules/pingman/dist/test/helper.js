"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ava_1 = __importDefault(require("ava"));
const helper_1 = require("../src/helper");
ava_1.default('check if validateIP throws error on empty IP', t => {
    t.throws(() => {
        helper_1.validateIp('');
    });
});
ava_1.default('check if validateIP throws error on invalid IP string', t => {
    t.throws(() => {
        helper_1.validateIp('asdasdasdasd');
    });
});
ava_1.default('check if validateIp works on valid IPV4', t => {
    let response = helper_1.validateIp('127.0.0.1');
    t.is(response, true);
});
ava_1.default('check if validateIp works on valid IPV6', t => {
    let response = helper_1.validateIp('fe80::2940:90ec:a964:4b42%7');
    t.is(response, true);
});
ava_1.default('check for validateIp website name', t => {
    let response = helper_1.validateIp('www.github.com');
    t.is(response, true);
});
ava_1.default('check if invalid platform throws error', t => {
    let response = helper_1.isPlatformSupported('Unsupported');
    t.is(response, false);
});
ava_1.default('check if valid platform returns true', t => {
    let response = helper_1.isPlatformSupported('win32');
    t.is(response, true);
});
